name: Rust check

on:
  push: { branches: [ master ] }
  pull_request: { branches: [ master ] }

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Checkout submodules
        run: git submodule update --init --force --recursive --remote

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: nightly
      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: Restore cargo packages
        uses: actions/cache@v3
        env:
          cache-name: cache-cargo-registry
        with:
          path: "~/.cargo/"
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  notification:
    runs-on: ubuntu-latest
    needs: [ check ]
    if: |
      github.repository == 'SIT-kite/kite-server' &&
      always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: nelonoel/branch-name@v1.0.1
      - uses: benjlevesque/short-sha@v2.1
        id: short-sha
        with: { length: 7 }

      - name: ðŸ¤– Build Success Notification
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.CHANNEL_CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          format: markdown
          message: |
            kite-server (*${{ env.BRANCH_NAME }}*) has just checked, *${{ env.WORKFLOW_CONCLUSION }}*.
            By *${{ github.actor }}*. Commit message:
            *${{ github.event.head_commit.message }}*
